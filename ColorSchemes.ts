import {
  DefaultTheme as NavigationDefaultTheme,
  DarkTheme as NavigationDarkTheme,
} from '@react-navigation/native';
import { MD3DarkTheme, MD3LightTheme } from 'react-native-paper';

export const LightThemeSchemes = {
  ...NavigationDefaultTheme,
  ...MD3LightTheme,
  colors: {
    ...NavigationDefaultTheme.colors,
    ...MD3LightTheme.colors,
    text: '#000000',
    primary: 'rgb(37, 88, 195)',
    onPrimary: 'rgb(255, 255, 255)',
    primaryContainer: 'rgb(218, 225, 255)',
    onPrimaryContainer: 'rgb(0, 24, 73)',
    secondary: 'rgb(90, 128, 216)',
    onSecondary: 'rgb(255, 255, 255)',
    secondaryContainer: 'rgb(217, 226, 255)',
    onSecondaryContainer: 'rgb(0, 25, 69)',
    tertiary: 'rgb(0, 104, 121)',
    onTertiary: 'rgb(255, 255, 255)',
    tertiaryContainer: 'rgb(169, 237, 255)',
    onTertiaryContainer: 'rgb(0, 31, 38)',
    error: 'rgb(186, 26, 26)',
    onError: 'rgb(255, 255, 255)',
    errorContainer: 'rgb(255, 218, 214)',
    onErrorContainer: 'rgb(65, 0, 2)',
    background: 'rgb(245, 245, 255)',
    onBackground: 'rgb(27, 27, 31)',
    surface: 'rgb(245, 245, 255)',
    onSurface: 'rgb(27, 27, 31)',
    surfaceVariant: 'rgb(225, 226, 236)',
    onSurfaceVariant: 'rgb(69, 70, 79)',
    outline: 'rgb(117, 118, 128)',
    outlineVariant: 'rgb(197, 198, 208)',
    shadow: 'rgb(0, 0, 0)',
    scrim: 'rgb(0, 0, 0)',
    inverseSurface: 'rgb(48, 48, 52)',
    inverseOnSurface: 'rgb(242, 240, 244)',
    inversePrimary: 'rgb(179, 197, 255)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(243, 243, 252)',
      level2: 'rgb(237, 238, 250)',
      level3: 'rgb(230, 233, 248)',
      level4: 'rgb(228, 231, 248)',
      level5: 'rgb(224, 228, 247)',
    },
    surfaceDisabled: 'rgba(27, 27, 31, 0.12)',
    onSurfaceDisabled: 'rgba(27, 27, 31, 0.38)',
    backdrop: 'rgba(46, 48, 56, 0.4)',
  },
};

export const DarkThemeSchemes = {
  ...NavigationDarkTheme,
  ...MD3DarkTheme,
  colors: {
    ...NavigationDarkTheme.colors,
    ...MD3DarkTheme.colors,
    text: '#ffffff',
    primary: 'rgb(179, 197, 255)',
    onPrimary: 'rgb(0, 43, 117)',
    primaryContainer: 'rgb(0, 63, 164)',
    onPrimaryContainer: 'rgb(218, 225, 255)',
    secondary: 'rgb(176, 198, 255)',
    onSecondary: 'rgb(0, 45, 111)',
    secondaryContainer: 'rgb(10, 66, 152)',
    onSecondaryContainer: 'rgb(217, 226, 255)',
    tertiary: 'rgb(84, 215, 242)',
    onTertiary: 'rgb(0, 54, 64)',
    tertiaryContainer: 'rgb(0, 78, 91)',
    onTertiaryContainer: 'rgb(169, 237, 255)',
    error: 'rgb(255, 180, 171)',
    onError: 'rgb(105, 0, 5)',
    errorContainer: 'rgb(147, 0, 10)',
    onErrorContainer: 'rgb(255, 180, 171)',
    background: 'rgb(27, 27, 31)',
    onBackground: 'rgb(228, 226, 230)',
    surface: 'rgb(27, 27, 31)',
    onSurface: 'rgb(228, 226, 230)',
    surfaceVariant: 'rgb(69, 70, 79)',
    onSurfaceVariant: 'rgb(197, 198, 208)',
    outline: 'rgb(143, 144, 154)',
    outlineVariant: 'rgb(69, 70, 79)',
    shadow: 'rgb(0, 0, 0)',
    scrim: 'rgb(0, 0, 0)',
    inverseSurface: 'rgb(228, 226, 230)',
    inverseOnSurface: 'rgb(48, 48, 52)',
    inversePrimary: 'rgb(37, 88, 195)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(35, 36, 42)',
      level2: 'rgb(39, 41, 49)',
      level3: 'rgb(44, 46, 56)',
      level4: 'rgb(45, 47, 58)',
      level5: 'rgb(48, 51, 62)',
    },
    surfaceDisabled: 'rgba(228, 226, 230, 0.12)',
    onSurfaceDisabled: 'rgba(228, 226, 230, 0.38)',
    backdrop: 'rgba(46, 48, 56, 0.4)',
  },
};
